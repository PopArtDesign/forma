var u=Object.defineProperty;var c=(r,e,t)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var a=(r,e,t)=>(c(r,typeof e!="symbol"?e+"":e,t),t);customElements.define("forma-form",class extends HTMLElement{constructor(){super();a(this,"submitHandler",e=>{if(e.preventDefault(),this.isSubmitting())return;this.state="submit",this.disableForm();const t=this.form.getAttribute("action"),s=this.form.getAttribute("method")||"post",h=new FormData(this.form);fetch(t,{method:s,body:h}).then(i=>i.json()).then(this.validateJSend).then(i=>{var o,n;switch(i.status){case"success":this.state="success",this.showSuccessMessage((o=i.data)==null?void 0:o.message),this.reset();break;case"fail":this.state="fail",this.showFailMessage((n=i.data)==null?void 0:n.message);break;case"error":throw this.state="error",Error("Forma: JSend: "+i.message);break}}).catch(i=>{throw this.state="error",this.showErrorMessage(),i}).finally(()=>{this.enableForm()})});a(this,"validateJSend",e=>{const t=e.status;if(t===void 0)throw Error("Forma: JSend: status field is not present");if(!t)throw Error("Forma: JSend: status field is empty");if(!["success","fail","error"].includes(t))throw Error("Forma: JSend: invalid status: "+t);if((t==="success"||t==="fail")&&e.data===void 0)throw Error("Forma: JSend: data field is not present");if(t==="error"&&e.message===void 0)throw Error("Forma: JSend: message field is not present");return e});if(this.form=this.querySelector("form"),!this.form)throw Error("Forma: <form> element not found.");this.successMessage=this.querySelector("forma-success"),this.failMessage=this.querySelector("forma-fail"),this.errorMessage=this.querySelector("forma-error"),this.state="initial"}get state(){return this.getAttribute("state")||"initial"}set state(e){if(!["initial","submit","success","fail","error"].includes(e))throw Error("Forma: invalid state: ".value);this.setAttribute("state",e)}connectedCallback(){this.form.addEventListener("submit",this.submitHandler)}disconnectedCallback(){this.form.removeEventListener("submit",this.submitHandler)}isSubmitting(){return this.state==="submit"}disableForm(){this.form.inert=!0}enableForm(){this.form.inert=!1}reset(){this.form.reset()}showMessage(e,t){this.clearMessages();const s=this[`${e}Message`];return!s||(t=t||s.getAttribute("default"),!t)?!1:(s.innerText=t,!0)}showSuccessMessage(e){return this.showMessage("success",e)}showFailMessage(e){return this.showMessage("fail",e)}showErrorMessage(e){return this.showMessage("error",e)}clearMessages(){this.successMessage.innerText="",this.failMessage.innerText="",this.errorMessage.innerText=""}}),document.addEventListener("submit",r=>{const e=r.target;if(!e.hasAttribute("data-secret"))return;const t=e.getAttribute("data-secret");let s=e._secret;s||(s=document.createElement("input"),s.name="_secret",s.type="hidden",e.append(s)),s.value=t},{capture:!0});
