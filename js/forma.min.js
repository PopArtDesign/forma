(()=>{var n=Object.defineProperty;var u=(r,t,e)=>t in r?n(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var a=(r,t,e)=>(u(r,typeof t!="symbol"?t+"":t,e),e);customElements.define("forma-form",class extends HTMLElement{constructor(){super();a(this,"submitHandler",t=>{t.preventDefault(),!this.isSubmitting()&&(this.state="submit",this.disableForm(),this.submitForm(this.form).then(e=>{var s,i;switch(e.status){case"success":this.state="success",this.showSuccessMessage((s=e.data)==null?void 0:s.message),this.reset();break;case"fail":this.state="fail",this.showFailMessage((i=e.data)==null?void 0:i.message);break;case"error":throw this.state="error",Error("Forma: JSend: "+e.message);break}}).catch(e=>{throw this.state="error",this.showErrorMessage(),e}).finally(()=>{this.enableForm()}))});if(this.form=this.querySelector("form"),!this.form)throw Error("Forma: <form> element not found.");this.successMessage=this.querySelector("forma-success"),this.failMessage=this.querySelector("forma-fail"),this.errorMessage=this.querySelector("forma-error"),this.state="initial"}get state(){return this.getAttribute("state")||"initial"}set state(t){if(!["initial","submit","success","fail","error"].includes(t))throw Error("Forma: invalid state: ".value);this.setAttribute("state",t)}connectedCallback(){this.form.addEventListener("submit",this.submitHandler)}disconnectedCallback(){this.form.removeEventListener("submit",this.submitHandler)}isSubmitting(){return this.state==="submit"}disableForm(){this.form.inert=!0}enableForm(){this.form.inert=!1}reset(){this.form.reset()}showMessage(t,e){this.clearMessages();let s=this[`${t}Message`];return!s||(e=e||s.getAttribute("default"),!e)?!1:(s.innerText=e,!0)}showSuccessMessage(t){return this.showMessage("success",t)}showFailMessage(t){return this.showMessage("fail",t)}showErrorMessage(t){return this.showMessage("error",t)}clearMessages(){this.successMessage.innerText="",this.failMessage.innerText="",this.errorMessage.innerText=""}submitForm(t){let e=t.getAttribute("action"),s=t.getAttribute("method")||"post",i=new FormData(t);return fetch(e,{method:s,body:i}).then(o=>o.json()).then(h)}});function h(r){let t=r.status;if(t===void 0)throw Error("Forma: JSend: status field is not present");if(!t)throw Error("Forma: JSend: status field is empty");if(!["success","fail","error"].includes(t))throw Error("Forma: JSend: invalid status: "+t);if((t==="success"||t==="fail")&&r.data===void 0)throw Error("Forma: JSend: data field is not present");if(t==="error"&&r.message===void 0)throw Error("Forma: JSend: message field is not present");return r}document.addEventListener("submit",r=>{let t=r.target,e=t.dataset.imnotarobot;if(!e)return;let s=t.imnotarobot;s||(s=document.createElement("input"),s.name="imnotarobot",s.type="hidden",t.append(s)),s.value=e},{capture:!0});})();
